{"version":3,"sources":["modules/suit.js","modules/value.js","modules/card.js","modules/deck.js","modules/player.js","modules/graveyard.js","modules/courtyard.js","modules/cards.js","modules/game.js","components/game.js","App.js","reportWebVitals.js","index.js"],"names":["Suit","name","this","Diamonds","Hearts","Spades","Clubs","Joker","Value","value","None","Ace","Two","Three","Four","Five","Six","Seven","Eight","Nine","Ten","Jack","Queen","King","Card","suit","_suit","_value","toString","otherCard","isTheSameSuitAs","isTheSameValueAs","displayString","elements","split","parseInt","JokerA","JokerB","Deck","cards","_cards","hearts","createCards","spades","clubs","diamonds","jokers","shuffle","i","length","j","Math","floor","random","pop","amount","display","card","unshift","forEach","push","cardCaptureDeck","CardCaptureDungeon","_setupCardCaptureDungeon","CardCaptureDeck","_setupCardCaptureDeck","Player","_hand","_discard","_discardFn","discardedCard","cardIndex","findIndex","isTheSameAs","splice","_destroyFn","destroyedCard","_deck","times","calculateCurrentSize","shuffleDiscardIntoDeck","draw","putAtTheBottom","position","place","spentCards","removeAt","graveyard","bury","Graveyard","_deadCards","Courtyard","first","second","third","fourth","undefined","isFull","placeFourth","copy","placeThird","placeSecond","placeFirst","Cards","total","_replaceJokers","k","_isNotTheSameSuitAsTheOtherCardButNotAJoker","cardsWithoutJokers","firstJokerIndex","bestCard","findHighestValue","secondJokerIndex","currentBest","m","isHigherThanOrEqualTo","Game","_player","_dungeon","_courtyard","_graveyard","displayHand","calculateDeckSice","displayDiscard","calculateSize","cardStrings","Error","map","fromDisplay","attacked","suffer","sacrifice","calculateHandSize","discard","areHigherValueThan","areTheSameSuitAs","buyFrom","_setupDungeon","_setupCourtyard","letPlayerDrawFromDeck","_checkForMaximumInCourtyard","advanceDungeon","advance","maximum","game","setupCardCapture","CardCapture","_instantiateCardCapture","initialGameState","GameModule","initialChoicesState","choices","Set","useState","state","updateState","captured","updateCaptured","updateChoices","useCallback","fill","fillPlayersHand","letPlayerDiscard","Array","from","values","letPlayerSuffer","error","toast","warn","message","capture","letPlayerAttackWith","letPlayerSacrifice","displayDeckSize","displayPlayerHand","displayCourtyard","Object","displayGraveyard","places","onCapturedChanged","e","target","onChoiceChange","cardDisplayValue","checked","add","delete","className","onClick","key","onChange","type","v","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAAMA,E,WAOJ,WAAYC,GAAO,oBACjBC,KAAKD,KAAOA,E,4CAGd,WACE,MAAM,GAAN,OAAUC,KAAKD,U,KAZbD,EACGG,SAAW,IAAIH,EAAK,YADvBA,EAEGI,OAAS,IAAIJ,EAAK,UAFrBA,EAGGK,OAAS,IAAIL,EAAK,UAHrBA,EAIGM,MAAQ,IAAIN,EAAK,SAJpBA,EAKGO,MAAQ,IAAIP,EAAK,SAWXA,QChBTQ,E,WAgBJ,WAAYC,GAAQ,oBAClBP,KAAKO,MAAQA,E,4CAGf,WACE,MAAM,GAAN,OAAUP,KAAKO,W,KArBbD,EACGE,KAAO,IAAIF,EAAM,GADpBA,EAEGG,IAAM,IAAIH,EAAM,IAFnBA,EAGGI,IAAM,IAAIJ,EAAM,GAHnBA,EAIGK,MAAQ,IAAIL,EAAM,GAJrBA,EAKGM,KAAO,IAAIN,EAAM,GALpBA,EAMGO,KAAO,IAAIP,EAAM,GANpBA,EAOGQ,IAAM,IAAIR,EAAM,GAPnBA,EAQGS,MAAQ,IAAIT,EAAM,GARrBA,EASGU,MAAQ,IAAIV,EAAM,GATrBA,EAUGW,KAAO,IAAIX,EAAM,GAVpBA,EAWGY,IAAM,IAAIZ,EAAM,IAXnBA,EAYGa,KAAO,IAAIb,EAAM,IAZpBA,EAaGc,MAAQ,IAAId,EAAM,IAbrBA,EAcGe,KAAO,IAAIf,EAAM,IAWXA,QCtBTgB,E,WAQJ,WAAYC,EAAMhB,GAAQ,oBACxBP,KAAKwB,MAAQD,EACbvB,KAAKyB,OAASlB,E,2CA+BhB,WACE,MAAM,GAAN,OAAUP,KAAKyB,OAAOC,WAAtB,eAAuC1B,KAAKwB,MAAME,c,mCAGpD,SAAsBC,GACpB,OAAO3B,KAAKyB,OAAOlB,OAASoB,EAAUF,OAAOlB,Q,8BAG/C,SAAiBoB,GACf,OAAO3B,KAAKyB,OAAOlB,QAAUoB,EAAUF,OAAOlB,Q,6BAGhD,SAAgBoB,GACd,OAAO3B,KAAKwB,MAAMzB,OAAS4B,EAAUH,MAAMzB,O,yBAG7C,SAAY4B,GACV,OAAO3B,KAAK4B,gBAAgBD,IAAc3B,KAAK6B,iBAAiBF,K,kBAGlE,WACE,OAAO,IAAIL,EAAKtB,KAAKwB,MAAOxB,KAAKyB,W,0BAjDnC,SAAmBF,GACjB,MAAO,CACL,IAAID,EAAKC,EAAMjB,EAAMG,KACrB,IAAIa,EAAKC,EAAMjB,EAAMI,KACrB,IAAIY,EAAKC,EAAMjB,EAAMK,OACrB,IAAIW,EAAKC,EAAMjB,EAAMM,MACrB,IAAIU,EAAKC,EAAMjB,EAAMO,MACrB,IAAIS,EAAKC,EAAMjB,EAAMQ,KACrB,IAAIQ,EAAKC,EAAMjB,EAAMS,OACrB,IAAIO,EAAKC,EAAMjB,EAAMU,OACrB,IAAIM,EAAKC,EAAMjB,EAAMW,MACrB,IAAIK,EAAKC,EAAMjB,EAAMY,KACrB,IAAII,EAAKC,EAAMjB,EAAMa,MACrB,IAAIG,EAAKC,EAAMjB,EAAMc,OACrB,IAAIE,EAAKC,EAAMjB,EAAMe,S,yBAIzB,SAAmBS,GACjB,IAAMC,EAAWD,EAAcE,MAAM,KAC/BT,EAAO,IAAIzB,EAAKiC,EAAS,IAK/B,OAAO,IAAIT,EAAKC,EAJFA,EAAKxB,OAASD,EAAKO,MAAMN,KACrC,IAAIO,EAAMyB,EAAS,IACnB,IAAIzB,EAAM2B,SAASF,EAAS,U,KApC5BT,EAIGjB,MAAQ,IAAIiB,EAAKxB,EAAKO,MAAOC,EAAME,MAJtCc,EAKGY,OAAS,IAAIZ,EAAKxB,EAAKO,MAAO,IAAIC,EAAM,UAL3CgB,EAMGa,OAAS,IAAIb,EAAKxB,EAAKO,MAAO,IAAIC,EAAM,SA4DlCgB,QCjETc,E,WAMJ,aAA2B,IAAfC,EAAc,uDAAN,KAClB,GADwB,yBAL1BC,OAAS,GAMM,OAAVD,EAAgB,CACjB,IAAME,EAASjB,EAAKkB,YAAY1C,EAAKI,QAC/BuC,EAASnB,EAAKkB,YAAY1C,EAAKK,QAC/BuC,EAAQpB,EAAKkB,YAAY1C,EAAKM,OAC9BuC,EAAWrB,EAAKkB,YAAY1C,EAAKG,UACjC2C,EAAS,CAACtB,EAAKjB,MAAOiB,EAAKjB,OAEjCL,KAAKsC,OAAL,sBACKC,GADL,YAEKE,GAFL,YAGKC,GAHL,YAIKC,GACAC,GAGL5C,KAAK6C,eAGL7C,KAAKsC,OAAL,YAAkBD,G,2CAItB,WACE,IAAK,IAAIS,EAAI9C,KAAKsC,OAAOS,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC/C,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADK,EAEZ,CAAC9C,KAAKsC,OAAOU,GAAIhD,KAAKsC,OAAOQ,IAA/D9C,KAAKsC,OAAOQ,GAFkC,KAE9B9C,KAAKsC,OAAOU,GAFkB,Q,kCAMnD,WACE,OAAOhD,KAAKsC,OAAOS,S,kBAGrB,WACE,OAAO/C,KAAKsC,OAAOc,Q,kBAGrB,SAAKC,GACH,OAAOrD,KAAKsC,OAAO,GAAGgB,Y,4BAGxB,SAAeC,GACbvD,KAAKsC,OAAOkB,QAAQD,M,uCAGtB,WACE,IAAMlB,EAAQ,GAcd,MAbc,CAACvC,EAAKI,OAAQJ,EAAKG,SAAUH,EAAKK,OAAQL,EAAKM,OACvDqD,SAAQ,SAAAlC,GACZc,EAAMqB,KAAK,IAAIpC,EAAKC,EAAMjB,EAAMO,OAChCwB,EAAMqB,KAAK,IAAIpC,EAAKC,EAAMjB,EAAMQ,MAChCuB,EAAMqB,KAAK,IAAIpC,EAAKC,EAAMjB,EAAMS,QAChCsB,EAAMqB,KAAK,IAAIpC,EAAKC,EAAMjB,EAAMU,QAChCqB,EAAMqB,KAAK,IAAIpC,EAAKC,EAAMjB,EAAMW,OAChCoB,EAAMqB,KAAK,IAAIpC,EAAKC,EAAMjB,EAAMY,MAChCmB,EAAMqB,KAAK,IAAIpC,EAAKC,EAAMjB,EAAMa,OAChCkB,EAAMqB,KAAK,IAAIpC,EAAKC,EAAMjB,EAAMc,QAChCiB,EAAMqB,KAAK,IAAIpC,EAAKC,EAAMjB,EAAMe,OAChCgB,EAAMqB,KAAK,IAAIpC,EAAKC,EAAMjB,EAAMG,SAE3B,IAAI2B,EAAKC,K,mCAGlB,WACE,IAAMA,EAAQ,GACA,CAACvC,EAAKI,OAAQJ,EAAKG,SAAUH,EAAKK,OAAQL,EAAKM,OACvDqD,SAAQ,SAAAlC,GACZc,EAAMqB,KAAK,IAAIpC,EAAKC,EAAMjB,EAAMI,MAChC2B,EAAMqB,KAAK,IAAIpC,EAAKC,EAAMjB,EAAMK,QAChC0B,EAAMqB,KAAK,IAAIpC,EAAKC,EAAMjB,EAAMM,UAElCyB,EAAMqB,KAAKpC,EAAKY,QAChBG,EAAMqB,KAAKpC,EAAKa,QAChB,IAAMwB,EAAkB,IAAIvB,EAAKC,GAEjC,OADAsB,EAAgBd,UACTc,M,KAlFLvB,EAGGwB,mBAHHxB,EAG6ByB,2BAH7BzB,EAIG0B,gBAJH1B,EAI0B2B,wBAkFjB3B,QCdA4B,E,WArEb,aAAe,IAAD,gCAJdC,MAAQ,GAIM,KAHdC,SAAW,GAGG,KAiBdC,WAAa,SAACC,GACZ,EAAKF,SAAL,sBAAoB,EAAKA,UAAzB,CAAmCE,IACnC,IAAMC,EAAY,EAAKJ,MAAMK,WAAU,SAAAf,GAAI,OAAIa,EAAcG,YAAYhB,MACzE,EAAKU,MAAMO,OAAOH,EAAW,IApBjB,KAuBdI,WAAa,SAACC,GACZ,IAAML,EAAY,EAAKJ,MAAMK,WAAU,SAAAf,GAAI,OAAImB,EAAcH,YAAYhB,MACzE,EAAKU,MAAMO,OAAOH,EAAW,IAxB7BrE,KAAK2E,MAAQvC,EAAK0B,gB,wCAGpB,WACE,IADe,IAAZc,EAAW,uDAAH,EACH9B,EAAI,EAAGA,EAAI8B,EAAO9B,IACiB,IAAtC9C,KAAK2E,MAAME,wBACZ7E,KAAK8E,yBAEP9E,KAAKiE,MAAL,sBAAiBjE,KAAKiE,OAAtB,CAA6BjE,KAAK2E,MAAMI,W,qBAI5C,SAAQ1C,GACNA,EAAMoB,QAAQzD,KAAKmE,c,oCAcrB,WAA0B,IAAD,OACvBnE,KAAKkE,SAAST,SAAQ,SAAAF,GACpB,EAAKoB,MAAMK,eAAezB,MAE5BvD,KAAKkE,SAAW,GAChBlE,KAAK2E,MAAM9B,Y,+BAGb,WACE,OAAO7C,KAAKiE,MAAMlB,S,+BAGpB,WACE,OAAO/C,KAAK2E,MAAME,yB,yBAGpB,WACE,OAAO,YAAI7E,KAAKiE,S,4BAGlB,WACE,OAAO,YAAIjE,KAAKkE,Y,qBAGlB,SAAQX,EAAM0B,EAAUC,EAAOC,GAC7BD,EAAME,SAASH,GACfjF,KAAKkE,SAAL,sBAAoBlE,KAAKkE,UAAzB,CAAmCX,IACnC4B,EAAW1B,QAAQzD,KAAKmE,c,uBAG1B,SAAUkB,EAAWhD,GACnBgD,EAAUC,KAAKjD,GACfA,EAAMoB,QAAQzD,KAAKyE,c,oBAGrB,SAAOY,EAAWhD,GAChBgD,EAAUC,KAAKjD,GACfA,EAAMoB,QAAQzD,KAAKyE,gB,KC5DRc,E,iDAXbC,WAAa,G,wCAEb,SAAKnD,GACHrC,KAAKwF,WAAL,sBAAsBxF,KAAKwF,YAA3B,YAA0CnD,M,2BAG5C,WACE,OAAOrC,KAAKwF,WAAWzC,W,KCuDZ0C,E,uFAzDb,WACE,MAAO,CACLC,MAAO1F,KAAK0F,MACZC,OAAQ3F,KAAK2F,OACbC,MAAO5F,KAAK4F,MACZC,OAAQ7F,KAAK6F,U,sBAIjB,SAASZ,GACPjF,KAAKiF,QAAYa,I,wBAGnB,SAAWJ,GACT1F,KAAK0F,MAAQA,I,yBAGf,SAAYC,GACV3F,KAAK2F,OAASA,I,wBAGhB,SAAWC,GACT5F,KAAK4F,MAAQA,I,yBAGf,SAAYC,GACV7F,KAAK6F,OAASA,I,oBAGhB,WACE,YAAkBC,IAAf9F,KAAK0F,aACWI,IAAhB9F,KAAK2F,cACUG,IAAf9F,KAAK4F,YACWE,IAAhB9F,KAAK6F,W,qBAIV,SAAQtC,GACHvD,KAAK+F,gBACWD,IAAhB9F,KAAK6F,aAAuCC,IAAf9F,KAAK4F,QACnC5F,KAAKgG,YAAYhG,KAAK4F,MAAMK,QAC5BjG,KAAKoF,SAAS,eAEEU,IAAf9F,KAAK4F,YAAuCE,IAAhB9F,KAAK2F,SAClC3F,KAAKkG,WAAWlG,KAAK2F,OAAOM,QAC5BjG,KAAKoF,SAAS,gBAEGU,IAAhB9F,KAAK2F,aAAuCG,IAAf9F,KAAK0F,QACnC1F,KAAKmG,YAAYnG,KAAK0F,MAAMO,QAC5BjG,KAAKoF,SAAS,eAEEU,IAAf9F,KAAK0F,OACN1F,KAAKoG,WAAW7C,Q,KCIP8C,E,uGA3Db,SAA0BhE,EAAOV,GAC/B,IAAI2E,EAAQ,EAKZ,OAJ2BD,EAAME,eAAelE,GAC7BoB,SAAQ,SAAAF,GACzB+C,GAAS/C,EAAK9B,OAAOlB,SAEhB+F,GAAS3E,EAAUF,OAAOlB,Q,8BAGnC,SAAwB8B,EAAOV,GAC7B,IAAI,IAAI6E,EAAI,EAAGA,EAAInE,EAAMU,OAAQyD,IAC/B,GAAIH,EAAMI,4CAA4CpE,EAAMmE,GAAI7E,GAAY,OAAO,EAErF,OAAO,I,yDAGT,SAAmD4B,EAAM5B,GACvD,OAAG4B,EAAK3B,gBAAgBN,EAAKjB,SACrBkD,EAAK3B,gBAAgBD,K,4BAI/B,SAAsBU,GACpB,IAAIqE,EAAkB,YAAOrE,GAEvBsE,EAAkBD,EAAmBpC,WAAU,SAAAf,GACnD,OAAOA,EAAKgB,YAAYjD,EAAKY,WAE/B,GAAGyE,GAAmB,EAAG,CACvBD,EAAmBlC,OAAOmC,EAAiB,GAC3C,IAAMC,EAAWP,EAAMQ,iBAAiBH,GACxCA,EAAkB,sBAAOA,GAAP,CAA2BE,IAG/C,IAAME,EAAmBJ,EAAmBpC,WAAU,SAAAf,GACpD,OAAOA,EAAKgB,YAAYjD,EAAKa,WAE/B,GAAG2E,GAAoB,EAAG,CACxBJ,EAAmBlC,OAAOsC,EAAkB,GAC5C,IAAMF,EAAWP,EAAMQ,iBAAiBH,GACxCA,EAAkB,sBAAOA,GAAP,CAA2BE,IAG/C,OAAOF,I,8BAGT,SAAwBrE,GAEtB,IADA,IAAI0E,OAAcjB,EACVkB,EAAI,EAAGA,EAAI3E,EAAMU,OAAQiE,IAC/B,GAAS,IAANA,EAASD,EAAc1E,EAAM,OAC3B,CACH,IAAMkB,EAAOlB,EAAM2E,GAChBzD,EAAK0D,sBAAsBF,KAAcA,EAAcxD,GAG9D,OAAOwD,M,KCjDLG,E,WAGJ,aAAe,oBACblH,KAAKmH,QAAU,IAAInD,EACnBhE,KAAKoH,SAAW,IAAIhF,EACpBpC,KAAKqH,WAAa,IAAI5B,EACtBzF,KAAKsH,WAAa,IAAI/B,E,qDAGxB,WACE,OAAOvF,KAAKmH,QAAQI,gB,6BAGtB,WACE,OAAOvH,KAAKmH,QAAQK,sB,4BAGtB,WACE,OAAOxH,KAAKmH,QAAQM,mB,8BAGtB,WACE,OAAOzH,KAAKqH,WAAW/D,Y,8BAGzB,WACE,OAAOtD,KAAKsH,WAAWI,kB,6BAGzB,SAAgBC,GACd,GAA0B,IAAvBA,EAAY5E,OAQb,MAAM,IAAI6E,MAAM,4BAPhB,IAAMvF,EAAQsF,EAAYE,IAAIvG,EAAKwG,aAC7BC,EAAW/H,KAAKqH,WAAL,OAA0BpB,OAE3CjG,KAAKmH,QAAQa,OAAOhI,KAAKsH,WAAYjF,GACrCrC,KAAKsH,WAAWhC,KAAK,CAACyC,IACtB/H,KAAKqH,WAAWjC,SAAS,Y,gCAM7B,SAAmBuC,EAAa1C,GAC9B,GAA0B,IAAvB0C,EAAY5E,OAQb,MAAM,IAAI6E,MAAM,gCAPhB,IAAMvF,EAAQsF,EAAYE,IAAIvG,EAAKwG,aAC7BC,EAAW/H,KAAKqH,WAAWpC,GAAUgB,OAE3CjG,KAAKmH,QAAQc,UAAUjI,KAAKsH,WAAYjF,GACxCrC,KAAKoH,SAASpC,eAAe+C,GAC7B/H,KAAKqH,WAAWjC,SAASH,K,6BAM7B,WACE,KAAMjF,KAAKmH,QAAQe,oBAAsB,GACvClI,KAAKmH,QAAQpC,S,mCAIjB,WAAkC,IAAZH,EAAW,uDAAH,EAC5B5E,KAAKmH,QAAQpC,KAAKH,K,8BAGpB,SAAiB+C,GACf,IAAMtF,EAAQsF,EAAYE,IAAIvG,EAAKwG,aACnC9H,KAAKmH,QAAQgB,QAAQ9F,K,iCAGvB,SAAoBsF,EAAa1C,GAC/B,IAAM5C,EAAQsF,EAAYE,IAAIvG,EAAKwG,aAC7BC,EAAW/H,KAAKqH,WAAWpC,GAEjC,IAAGoB,EAAM+B,mBAAmB/F,EAAO0F,KAAa1B,EAAMgC,iBAAiBhG,EAAO0F,GAO5E,MAAM,IAAIH,MAAM,6BANhB5H,KAAKmH,QAAQmB,QACXP,EACA9C,EACAjF,KAAKqH,WACLhF,K,8BAMN,WACErC,KAAKuI,gBACLvI,KAAKwI,kBACLxI,KAAKyI,sBAAsB,K,2BAG7B,WACEzI,KAAKoH,SAAWhF,EAAKwB,mBACrB5D,KAAKoH,SAASvE,Y,6BAGhB,WACE,IAAM6C,EAAQ1F,KAAKoH,SAASrC,OACtBY,EAAS3F,KAAKoH,SAASrC,OACvBa,EAAQ5F,KAAKoH,SAASrC,OACtBc,EAAS7F,KAAKoH,SAASrC,OAS7B,IAPA/E,KAAKqH,WAAWjB,WAAWV,GAC3B1F,KAAKqH,WAAWlB,YAAYR,GAC5B3F,KAAKqH,WAAWnB,WAAWN,GAC3B5F,KAAKqH,WAAWrB,YAAYH,GAE5B7F,KAAK0I,+BAE8B,IAA7B1I,KAAKqH,WAAWtB,UACpB/F,KAAK2I,mB,4BAIT,WACE3I,KAAKqH,WAAWuB,QAAQ5I,KAAKoH,SAASrC,U,yCAGxC,WACE,IAAM8D,EAAU,IAAIvH,EAAKxB,EAAKI,OAAQI,EAAMa,MAEtCuE,EAAQ1F,KAAKqH,WAAW3B,MAAMO,OAC9BN,EAAS3F,KAAKqH,WAAW1B,OAAOM,OAChCL,EAAQ5F,KAAKqH,WAAWzB,MAAMK,OAC9BJ,EAAS7F,KAAKqH,WAAWxB,OAAOI,OAEnCP,EAAMuB,sBAAsB4B,KAC7B7I,KAAKoH,SAASpC,eAAeU,GAC7B1F,KAAKqH,WAAWjC,SAAS,UAGxBO,EAAOsB,sBAAsB4B,KAC9B7I,KAAKoH,SAASpC,eAAeW,GAC7B3F,KAAKqH,WAAWjC,SAAS,WAGxBQ,EAAMqB,sBAAsB4B,KAC7B7I,KAAKoH,SAASpC,eAAeY,GAC7B5F,KAAKqH,WAAWjC,SAAS,UAGxBS,EAAOoB,sBAAsB4B,KAC9B7I,KAAKoH,SAASpC,eAAea,GAC7B7F,KAAKqH,WAAWjC,SAAS,c,sCAI7B,WACE,IAAM0D,EAAO,IAAI5B,EAEjB,OADA4B,EAAKC,mBACED,M,KAvJL5B,EACG8B,YADH9B,EACsB+B,0BA0Jb/B,Q,OC5JTgC,EAAmB,CACvBJ,KAAMK,EAAWH,aAGbI,EAAsB,CAC1BC,QAAS,IAAIC,KA8KApC,EA3KF,WAAO,IAAD,EACYqC,mBAASL,GADrB,mBACVM,EADU,KACHC,EADG,OAEkBF,qBAFlB,mBAEVG,EAFU,KAEAC,EAFA,OAGoBJ,mBAASH,GAH7B,mBAGRC,EAHQ,KAGRA,QAAWO,EAHH,KAKX7E,EAAO8E,uBAAY,WACvBL,EAAMV,KAAKL,wBACXgB,EAAY,CAAEX,KAAMU,EAAMV,SACzB,CAACU,IAEEM,EAAOD,uBAAY,WACvBL,EAAMV,KAAKiB,kBACXN,EAAY,CAAEX,KAAMU,EAAMV,SACzB,CAACU,IAEErB,EAAU0B,uBAAY,WAC1BL,EAAMV,KAAKkB,iBAAiBC,MAAMC,KAAKb,EAAQc,WAC/CV,EAAY,CAAEX,KAAMU,EAAMV,OAC1Bc,EAAc,CAAEP,QAAS,IAAIC,QAC5B,CAACD,EAASG,IAEPxB,EAAS6B,uBAAY,WACzB,IACEL,EAAMV,KAAKsB,gBAAgBH,MAAMC,KAAKb,EAAQc,WAC9CP,EAAc,CAAEP,QAAS,IAAIC,MAC7B,MAAMe,GACNC,IAAMC,KAAKF,EAAMG,SAEnBf,EAAY,CAAEX,KAAMU,EAAMV,SACzB,CAACO,EAASG,IAEPiB,EAAUZ,uBAAY,WAC1B,IACEL,EAAMV,KAAK4B,oBAAoBT,MAAMC,KAAKb,EAAQc,UAAWT,GAC7DE,EAAc,CAAEP,QAAS,IAAIC,MAC7B,MAAMe,GACNC,IAAMC,KAAK,iCAEbd,EAAY,CAAEX,KAAOU,EAAMV,SAC1B,CAACY,EAAUL,EAASG,IAEjBvB,EAAY4B,uBAAY,WAC5B,IACEL,EAAMV,KAAK6B,mBAAmBV,MAAMC,KAAKb,EAAQc,UAAWT,GAC5DE,EAAc,CAAEP,QAAS,IAAIC,MAC7B,MAAMe,GACNC,IAAMC,KAAKF,EAAMG,SAEnBf,EAAY,CAAEX,KAAOU,EAAMV,SAC1B,CAACY,EAAUL,EAASG,IAEjBZ,EAAUiB,uBAAY,WAC1BL,EAAMV,KAAKH,iBACXc,EAAY,CAAEX,KAAOU,EAAMV,SAC1B,CAACU,IAEEoB,EAAkBf,uBAAY,WAClC,OAAOL,EAAMV,KAAK8B,oBACjB,CAACpB,IAEEjC,EAAcsC,uBAAY,WAC9B,OAAOL,EAAMV,KAAK+B,sBACjB,CAACrB,IAEE/B,EAAiBoC,uBAAY,WACjC,OAAOL,EAAMV,KAAKrB,mBACjB,CAAC+B,IAEEsB,EAAmBjB,uBAAY,WACnC,OAAOkB,OAAOZ,OAAOX,EAAMV,KAAKgC,sBAC/B,CAACtB,IAEEwB,EAAmBnB,uBAAY,WACnC,OAAOL,EAAMV,KAAKkC,qBACjB,CAACxB,IAEEyB,EAAS,CAAC,QAAS,SAAU,QAAS,UAEtCC,EAAoBrB,uBAAY,SAACsB,GACrCxB,EAAewB,EAAEC,OAAO7K,SACvB,IAEG8K,EAAiBxB,uBAAY,SAACsB,GAClC,IAAMG,EAAmBH,EAAEC,OAAO7K,MAChB4K,EAAEC,OAAOG,QAEblC,EAAQmC,IAAIF,GACrBjC,EAAQoC,OAAOH,GAEpB1B,EAAc,CAAEP,cACf,CAACA,IAEJ,OACE,sBAAKqC,UAAU,OAAf,UACE,gCACE,sCACA,wBAAQC,QAAS5G,EAAjB,kBAGA,wBAAQ4G,QAAS7B,EAAjB,kBAGA,wBAAQ6B,QAASxD,EAAjB,qBAGA,uCAAUyC,OACTrD,IAAcM,KAAI,SAACtE,EAAMT,GACxB,IAAM8I,EAAG,YAAQrI,EAAKD,UAAb,YAA0BR,GACnC,OACE,gCACE,uBACE+I,SAAUR,EACV9K,MAAOgD,EAAKD,UACZwI,KAAK,aACJvI,EAAKD,YALAsI,SAUhB,gCACE,yCACCnE,IAAiBI,KAAI,SAACtE,EAAMT,GAC3B,OACE,8BACGS,EAAKD,WADR,WAAcR,UAMpB,gCACE,2CACA,wBAAQ6I,QAASlB,EAAjB,qBAGA,wBAAQkB,QAAS/C,EAAjB,qBAGA,wBAAQ+C,QAAS1D,EAAjB,uBAGA,wBAAQ0D,QAAS3D,EAAjB,oBAGA,qBAAK6D,SAAUX,EAAf,SACGJ,IAAmBjD,KAAI,SAACtE,EAAMT,GAC7B,IAAM8I,OAAe9F,IAATvC,EAAA,sBACKT,GADL,YAELS,EAAKD,UAFA,YAEaR,GAYzB,YAXoBgD,IAATvC,EACR,qBAAcwI,GAAC,EAAf,iBAAUH,GAET,gCACE,uBACE7L,KAAK,WACLQ,MAAO0K,EAAOnI,GACdgJ,KAAK,UACJvI,EAAKD,YALAsI,WAYpB,gCACE,2CACA,4BAAIZ,aCrKGgB,MATf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,IAAD,QCCSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2ec21325.chunk.js","sourcesContent":["class Suit {\n  static Diamonds = new Suit('Diamonds')\n  static Hearts = new Suit('Hearts')\n  static Spades = new Suit('Spades')\n  static Clubs = new Suit('Clubs')\n  static Joker = new Suit('Joker')\n\n  constructor(name) {\n    this.name = name\n  }\n\n  toString() {\n    return `${this.name}`\n  }\n}\n\nexport default Suit\n","class Value {\n  static None = new Value(0)\n  static Ace = new Value(14)\n  static Two = new Value(2)\n  static Three = new Value(3)\n  static Four = new Value(4)\n  static Five = new Value(5)\n  static Six = new Value(6)\n  static Seven = new Value(7)\n  static Eight = new Value(8)\n  static Nine = new Value(9)\n  static Ten = new Value(10)\n  static Jack = new Value(11)\n  static Queen = new Value(12)\n  static King = new Value(13)\n\n  constructor(value) {\n    this.value = value\n  }\n\n  toString() {\n    return `${this.value}`\n  }\n}\n\nexport default Value\n","import Suit from './suit.js'\nimport Value from './value.js'\n\nclass Card {\n  _suit\n  _value\n\n  static Joker = new Card(Suit.Joker, Value.None)\n  static JokerA = new Card(Suit.Joker, new Value('COLOR'))\n  static JokerB = new Card(Suit.Joker, new Value('GREY'))\n\n  constructor(suit, value) {\n    this._suit = suit\n    this._value = value\n  }\n\n  static createCards(suit) {\n    return [\n      new Card(suit, Value.Ace),\n      new Card(suit, Value.Two),\n      new Card(suit, Value.Three),\n      new Card(suit, Value.Four),\n      new Card(suit, Value.Five),\n      new Card(suit, Value.Six),\n      new Card(suit, Value.Seven),\n      new Card(suit, Value.Eight),\n      new Card(suit, Value.Nine),\n      new Card(suit, Value.Ten),\n      new Card(suit, Value.Jack),\n      new Card(suit, Value.Queen),\n      new Card(suit, Value.King),\n    ]\n  }\n\n  static fromDisplay(displayString) {\n    const elements = displayString.split(' ')\n    const suit = new Suit(elements[2])\n    const value = suit.name === Suit.Joker.name ?\n      new Value(elements[0]) :\n      new Value(parseInt(elements[0]))\n\n    return new Card(suit, value)\n  }\n\n  display() {\n    return `${this._value.toString()} of ${this._suit.toString()}`\n  }\n\n  isHigherThanOrEqualTo(otherCard) {\n    return this._value.value >= otherCard._value.value\n  }\n\n  isTheSameValueAs(otherCard) {\n    return this._value.value === otherCard._value.value\n  }\n\n  isTheSameSuitAs(otherCard) {\n    return this._suit.name === otherCard._suit.name\n  }\n\n  isTheSameAs(otherCard) {\n    return this.isTheSameSuitAs(otherCard) && this.isTheSameValueAs(otherCard)\n  }\n\n  copy() {\n    return new Card(this._suit, this._value)\n  }\n}\n\nexport default Card\n","import Suit from './suit.js'\nimport Value from './value.js'\nimport Card from './card.js'\n\nclass Deck {\n  _cards = []\n\n  static CardCaptureDungeon = this._setupCardCaptureDungeon()\n  static CardCaptureDeck = this._setupCardCaptureDeck()\n\n  constructor(cards = null) {\n    if(cards === null) {\n      const hearts = Card.createCards(Suit.Hearts)\n      const spades = Card.createCards(Suit.Spades)\n      const clubs = Card.createCards(Suit.Clubs)\n      const diamonds = Card.createCards(Suit.Diamonds)\n      const jokers = [Card.Joker, Card.Joker]\n\n      this._cards = [\n        ...hearts,\n        ...spades,\n        ...clubs,\n        ...diamonds,\n        ...jokers\n      ]\n\n      this.shuffle()\n    }\n    else {\n      this._cards = [...cards]\n    }\n  }\n\n  shuffle() {\n    for (let i = this._cards.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [this._cards[i], this._cards[j]] = [this._cards[j], this._cards[i]];\n    }\n  }\n\n  calculateCurrentSize() {\n    return this._cards.length\n  }\n\n  draw() {\n    return this._cards.pop()\n  }\n\n  peek(amount) {\n    return this._cards[0].display()\n  }\n\n  putAtTheBottom(card) {\n    this._cards.unshift(card)\n  }\n\n  static _setupCardCaptureDungeon() {\n    const cards = []\n    const suits = [Suit.Hearts, Suit.Diamonds, Suit.Spades, Suit.Clubs]\n    suits.forEach(suit => {\n      cards.push(new Card(suit, Value.Five))\n      cards.push(new Card(suit, Value.Six))\n      cards.push(new Card(suit, Value.Seven))\n      cards.push(new Card(suit, Value.Eight))\n      cards.push(new Card(suit, Value.Nine))\n      cards.push(new Card(suit, Value.Ten))\n      cards.push(new Card(suit, Value.Jack))\n      cards.push(new Card(suit, Value.Queen))\n      cards.push(new Card(suit, Value.King))\n      cards.push(new Card(suit, Value.Ace))\n    })\n    return new Deck(cards)\n  }\n\n  static _setupCardCaptureDeck() {\n    const cards = []\n    const suits = [Suit.Hearts, Suit.Diamonds, Suit.Spades, Suit.Clubs]\n    suits.forEach(suit => {\n      cards.push(new Card(suit, Value.Two))\n      cards.push(new Card(suit, Value.Three))\n      cards.push(new Card(suit, Value.Four))\n    })\n    cards.push(Card.JokerA)\n    cards.push(Card.JokerB)\n    const cardCaptureDeck = new Deck(cards)\n    cardCaptureDeck.shuffle()\n    return cardCaptureDeck\n  }\n}\n\nexport default Deck\n","import Deck from './deck.js'\n\nclass Player {\n  _hand = []\n  _discard = []\n  _deck\n\n  constructor() {\n    this._deck = Deck.CardCaptureDeck\n  }\n\n  draw(times = 1) {\n    for(let i = 0; i < times; i++) {\n      if(this._deck.calculateCurrentSize() === 0) {\n        this.shuffleDiscardIntoDeck()\n      }\n      this._hand = [...this._hand, this._deck.draw()]\n    }\n  }\n\n  discard(cards) {\n    cards.forEach(this._discardFn)\n  }\n\n  _discardFn = (discardedCard) => {\n    this._discard = [...this._discard, discardedCard]\n    const cardIndex = this._hand.findIndex(card => discardedCard.isTheSameAs(card))\n    this._hand.splice(cardIndex, 1)\n  }\n\n  _destroyFn = (destroyedCard) => {\n    const cardIndex = this._hand.findIndex(card => destroyedCard.isTheSameAs(card))\n    this._hand.splice(cardIndex, 1)\n  }\n\n  shuffleDiscardIntoDeck() {\n    this._discard.forEach(card => {\n      this._deck.putAtTheBottom(card)\n    })\n    this._discard = []\n    this._deck.shuffle()\n  }\n\n  calculateHandSize() {\n    return this._hand.length\n  }\n\n  calculateDeckSice() {\n    return this._deck.calculateCurrentSize()\n  }\n\n  displayHand() {\n    return [...this._hand]\n  }\n\n  displayDiscard() {\n    return [...this._discard]\n  }\n\n  buyFrom(card, position, place, spentCards) {\n    place.removeAt(position)\n    this._discard = [...this._discard, card]\n    spentCards.forEach(this._discardFn)\n  }\n\n  sacrifice(graveyard, cards) {\n    graveyard.bury(cards)\n    cards.forEach(this._destroyFn)\n  }\n\n  suffer(graveyard, cards) {\n    graveyard.bury(cards)\n    cards.forEach(this._destroyFn)\n  }\n}\n\nexport default Player\n","class Graveyard {\n  _deadCards = []\n\n  bury(cards) {\n    this._deadCards = [...this._deadCards, ...cards]\n  }\n\n  calculateSize() {\n    return this._deadCards.length\n  }\n}\n\nexport default Graveyard\n","class Courtyard {\n  first\n  second\n  third\n  fourth\n\n  display() {\n    return {\n      first: this.first,\n      second: this.second,\n      third: this.third,\n      fourth: this.fourth\n    }\n  }\n\n  removeAt(position) {\n    this[position] = undefined\n  }\n\n  placeFirst(first) {\n    this.first = first\n  }\n\n  placeSecond(second) {\n    this.second = second\n  }\n\n  placeThird(third) {\n    this.third = third\n  }\n\n  placeFourth(fourth) {\n    this.fourth = fourth\n  }\n\n  isFull() {\n    if(this.first === undefined) return false\n    if(this.second === undefined) return false\n    if(this.third === undefined) return false\n    if(this.fourth === undefined) return false\n    return true\n  }\n\n  advance(card) {\n    if(this.isFull()) return\n    if(this.fourth === undefined && this.third !== undefined) {\n      this.placeFourth(this.third.copy())\n      this.removeAt('third')\n    }\n    if(this.third === undefined && this.second !== undefined) {\n      this.placeThird(this.second.copy())\n      this.removeAt('second')\n    }\n    if(this.second === undefined && this.first !== undefined) {\n      this.placeSecond(this.first.copy())\n      this.removeAt('first')\n    }\n    if(this.first === undefined) {\n      this.placeFirst(card)\n    }\n  }\n}\n\nexport default Courtyard\n","import Card from './card.js'\n\nclass Cards {\n  static areHigherValueThan(cards, otherCard) {\n    let total = 0\n    const cardsWithoutJokers = Cards._replaceJokers(cards)\n    cardsWithoutJokers.forEach(card => {\n      total += card._value.value\n    })\n    return total >= otherCard._value.value\n  }\n\n  static areTheSameSuitAs(cards, otherCard) {\n    for(let k = 0; k < cards.length; k++) {\n      if (Cards._isNotTheSameSuitAsTheOtherCardButNotAJoker(cards[k], otherCard)) return false\n    }\n    return true\n  }\n\n  static _isNotTheSameSuitAsTheOtherCardButNotAJoker(card, otherCard) {\n    if(card.isTheSameSuitAs(Card.Joker)) return false\n    return !card.isTheSameSuitAs(otherCard)\n  }\n\n\n  static _replaceJokers(cards) {\n    let cardsWithoutJokers = [...cards]\n\n    const firstJokerIndex = cardsWithoutJokers.findIndex(card => {\n      return card.isTheSameAs(Card.JokerA)\n    })\n    if(firstJokerIndex >= 0) {\n      cardsWithoutJokers.splice(firstJokerIndex, 1)\n      const bestCard = Cards.findHighestValue(cardsWithoutJokers)\n      cardsWithoutJokers = [...cardsWithoutJokers, bestCard]\n    }\n\n    const secondJokerIndex = cardsWithoutJokers.findIndex(card => {\n      return card.isTheSameAs(Card.JokerB)\n    })\n    if(secondJokerIndex >= 0) {\n      cardsWithoutJokers.splice(secondJokerIndex, 1)\n      const bestCard = Cards.findHighestValue(cardsWithoutJokers)\n      cardsWithoutJokers = [...cardsWithoutJokers, bestCard]\n    }\n\n    return cardsWithoutJokers\n  }\n\n  static findHighestValue(cards) {\n    let currentBest = undefined\n    for(let m = 0; m < cards.length; m++) {\n      if(m === 0) currentBest = cards[0]\n      else {\n        const card = cards[m]\n        if(card.isHigherThanOrEqualTo(currentBest)) currentBest = card\n      }\n    }\n    return currentBest\n  }\n}\n\nexport default Cards\n","import Player from './player.js'\nimport Deck from './deck.js'\nimport Graveyard from './graveyard.js'\nimport Courtyard from './courtyard.js'\nimport Cards from './cards.js'\nimport Card from './card.js'\nimport Value from './value.js'\nimport Suit from './suit.js'\n\nclass Game {\n  static CardCapture = this._instantiateCardCapture()\n\n  constructor() {\n    this._player = new Player()\n    this._dungeon = new Deck()\n    this._courtyard = new Courtyard()\n    this._graveyard = new Graveyard()\n  }\n  \n  displayPlayerHand() {\n    return this._player.displayHand()\n  }\n\n  displayDeckSize() {\n    return this._player.calculateDeckSice()\n  }\n  \n  displayDiscard() {\n    return this._player.displayDiscard()\n  }\n\n  displayCourtyard() {\n    return this._courtyard.display()\n  }\n\n  displayGraveyard() {\n    return this._graveyard.calculateSize()\n  }\n\n  letPlayerSuffer(cardStrings) {\n    if(cardStrings.length === 1) {\n      const cards = cardStrings.map(Card.fromDisplay)\n      const attacked = this._courtyard['fourth'].copy()\n\n      this._player.suffer(this._graveyard, cards)\n      this._graveyard.bury([attacked])\n      this._courtyard.removeAt('fourth')\n    } else {\n      throw new Error('You must suffer one card')\n    }\n  }\n\n  letPlayerSacrifice(cardStrings, position) {\n    if(cardStrings.length === 2) {\n      const cards = cardStrings.map(Card.fromDisplay)\n      const attacked = this._courtyard[position].copy()\n\n      this._player.sacrifice(this._graveyard, cards)\n      this._dungeon.putAtTheBottom(attacked)\n      this._courtyard.removeAt(position)\n    } else {\n      throw new Error('You must sacrifice two cards')\n    }\n  }\n\n  fillPlayersHand() {\n    while(this._player.calculateHandSize() < 4) {\n      this._player.draw()\n    }\n  }\n\n  letPlayerDrawFromDeck(times = 1) {\n    this._player.draw(times)\n  }\n\n  letPlayerDiscard(cardStrings) {\n    const cards = cardStrings.map(Card.fromDisplay)\n    this._player.discard(cards)\n  }\n\n  letPlayerAttackWith(cardStrings, position) {\n    const cards = cardStrings.map(Card.fromDisplay)\n    const attacked = this._courtyard[position]\n\n    if(Cards.areHigherValueThan(cards, attacked) && Cards.areTheSameSuitAs(cards, attacked)) {\n      this._player.buyFrom(\n        attacked,\n        position,\n        this._courtyard,\n        cards)\n    } else {\n      throw new Error('You cannot buy this scrub')\n    }\n  }\n\n  setupCardCapture() {\n    this._setupDungeon()\n    this._setupCourtyard()\n    this.letPlayerDrawFromDeck(4)\n  }\n\n  _setupDungeon() {\n    this._dungeon = Deck.CardCaptureDungeon\n    this._dungeon.shuffle()\n  }\n\n  _setupCourtyard() {\n    const first = this._dungeon.draw()\n    const second = this._dungeon.draw()\n    const third = this._dungeon.draw()\n    const fourth = this._dungeon.draw()\n\n    this._courtyard.placeFirst(first)\n    this._courtyard.placeSecond(second)\n    this._courtyard.placeThird(third)\n    this._courtyard.placeFourth(fourth)\n\n    this._checkForMaximumInCourtyard()\n\n    while(this._courtyard.isFull() === false) {\n      this.advanceDungeon()\n    }\n  }\n\n  advanceDungeon() {\n    this._courtyard.advance(this._dungeon.draw())\n  }\n\n  _checkForMaximumInCourtyard() {\n    const maximum = new Card(Suit.Hearts, Value.Jack)\n\n    const first = this._courtyard.first.copy()\n    const second = this._courtyard.second.copy()\n    const third = this._courtyard.third.copy()\n    const fourth = this._courtyard.fourth.copy()\n\n    if(first.isHigherThanOrEqualTo(maximum)) {\n      this._dungeon.putAtTheBottom(first)\n      this._courtyard.removeAt('first')\n    }\n\n    if(second.isHigherThanOrEqualTo(maximum)) {\n      this._dungeon.putAtTheBottom(second)\n      this._courtyard.removeAt('second')\n    }\n\n    if(third.isHigherThanOrEqualTo(maximum)) {\n      this._dungeon.putAtTheBottom(third)\n      this._courtyard.removeAt('third')\n    }\n\n    if(fourth.isHigherThanOrEqualTo(maximum)) {\n      this._dungeon.putAtTheBottom(fourth)\n      this._courtyard.removeAt('fourth')\n    }\n  }\n\n  static _instantiateCardCapture() {\n    const game = new Game()\n    game.setupCardCapture()\n    return game\n  }\n}\n\nexport default Game\n","import React, { useCallback, useState } from 'react'\n\n import { toast } from 'react-toastify'\n\nimport './game.css'\n\nimport GameModule from '../modules/game.js'\n\nconst initialGameState = {\n  game: GameModule.CardCapture\n}\n\nconst initialChoicesState = {\n  choices: new Set()\n}\n\nconst Game = () => {\n  const [state, updateState] = useState(initialGameState)\n  const [captured, updateCaptured] = useState()\n  const [{ choices }, updateChoices] = useState(initialChoicesState)\n\n  const draw = useCallback(() => {\n    state.game.letPlayerDrawFromDeck()\n    updateState({ game: state.game })\n  }, [state])\n\n  const fill = useCallback(() => {\n    state.game.fillPlayersHand()\n    updateState({ game: state.game })\n  }, [state])\n\n  const discard = useCallback(() => {\n    state.game.letPlayerDiscard(Array.from(choices.values()))\n    updateState({ game: state.game })\n    updateChoices({ choices: new Set() })\n  }, [choices, state])\n\n  const suffer = useCallback(() => {\n    try {\n      state.game.letPlayerSuffer(Array.from(choices.values()))\n      updateChoices({ choices: new Set() })\n    } catch(error) {\n      toast.warn(error.message)\n    }\n    updateState({ game: state.game })\n  }, [choices, state])\n\n  const capture = useCallback(() => {\n    try {\n      state.game.letPlayerAttackWith(Array.from(choices.values()), captured)\n      updateChoices({ choices: new Set() })\n    } catch(error) {\n      toast.warn('You can\\'t capture this one...')\n    }\n    updateState({ game : state.game })\n  }, [captured, choices, state])\n\n  const sacrifice = useCallback(() => {\n    try {\n      state.game.letPlayerSacrifice(Array.from(choices.values()), captured)\n      updateChoices({ choices: new Set() })\n    } catch(error) {\n      toast.warn(error.message)\n    }\n    updateState({ game : state.game })\n  }, [captured, choices, state])\n\n  const advance = useCallback(() => {\n    state.game.advanceDungeon()\n    updateState({ game : state.game })\n  }, [state])\n\n  const displayDeckSize = useCallback(() => {\n    return state.game.displayDeckSize()\n  }, [state])\n\n  const displayHand = useCallback(() => {\n    return state.game.displayPlayerHand()\n  }, [state])\n\n  const displayDiscard = useCallback(() => {\n    return state.game.displayDiscard()\n  }, [state])\n\n  const displayCourtyard = useCallback(() => {\n    return Object.values(state.game.displayCourtyard())\n  }, [state])\n\n  const displayGraveyard = useCallback(() => {\n    return state.game.displayGraveyard()\n  }, [state])\n\n  const places = ['first', 'second', 'third', 'fourth']\n\n  const onCapturedChanged = useCallback((e) => {\n    updateCaptured(e.target.value)\n  }, [])\n\n  const onChoiceChange = useCallback((e) => {\n    const cardDisplayValue = e.target.value\n    const isChecked = e.target.checked\n    \n    if(isChecked) choices.add(cardDisplayValue)\n    else choices.delete(cardDisplayValue)\n\n    updateChoices({ choices })\n  }, [choices])\n\n  return (\n    <div className='game'>\n      <div>\n        <h2>Hand</h2>\n        <button onClick={draw}>\n          Draw\n        </button>\n        <button onClick={fill}>\n          Fill\n        </button>\n        <button onClick={discard}>\n          Discard\n        </button>\n        <p>Deck: {displayDeckSize()}</p>\n        {displayHand().map((card, i) => {\n          const key = `h-${card.display()}-${i}`\n          return (\n            <div key={key}>\n              <input \n                onChange={onChoiceChange}\n                value={card.display()}\n                type='checkbox'\n              />{card.display()}\n            </div>\n          )\n        })}\n      </div>\n      <div>\n        <h2>Discard</h2>\n        {displayDiscard().map((card, i) => {\n          return (\n            <div key={`d${i}`}>\n              {card.display()}\n            </div>\n          )\n        })}\n      </div>\n      <div>\n        <h2>Courtyard</h2>\n        <button onClick={capture}>\n          Capture\n        </button>\n        <button onClick={advance}>\n          Advance\n        </button>\n        <button onClick={sacrifice}>\n          Sacrifice\n        </button>\n        <button onClick={suffer}>\n          Suffer\n        </button>\n        <div onChange={onCapturedChanged}>\n          {displayCourtyard().map((card, i) => {\n            const key = card === undefined ?\n              `c-undefined-${i}` :\n              `c-${card.display()}-${i}`\n            const cd = card === undefined ?\n              (<div key={key}v>none</div>) :\n              (\n                <div key={key}>\n                  <input\n                    name='captured'\n                    value={places[i]}\n                    type='radio'\n                  />{card.display()}\n                </div>\n              )\n            return cd\n           })}\n        </div>\n      </div>\n      <div>\n        <h2>Graveyard</h2>\n        <p>{displayGraveyard()}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Game\n","import React from 'react'\n\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport Game from './components/game.js'\n\nfunction App() {\n  return (\n    <div>\n      <Game />\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}